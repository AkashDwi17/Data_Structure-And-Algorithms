import java.util.*;
public class DoubleLL{
    public static class Node{
        int data;
        Node next;
        Node prev;

        public Node (int data){
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }
    public  Node head = null;
    public  Node tail = null;


    // Add First

    public  void addFirst (int data){
        Node newNode = new Node(data);
        if (head == null){
            head = tail = newNode;
            return;
        }
        newNode.next = head;
        head.prev = newNode;
        head = newNode;
        size ++;
    }

    // Add Last
    public  void addLast (int data){
        Node newNode = new Node(data);
        if (head == null){
            head = tail = newNode;
        }
        tail.next = newNode;
        newNode.prev = tail;
        tail = newNode;
        size ++;
    }

    // Remove first
    public  int removeFirst(){
        if (head == null ){
            return -1;
        }
        int top = head.data;
        head = head.next;
        head.prev =null;
        size --;
        return top;
    }

    public  void print(){
        if (head == null){
            System.out.println("null");
        }
        Node temp = head;
        while (temp != null){
            System.out.println(temp.data);
            temp = temp.next;
        }
    }
    static int size = 0;


     // 
    public static void main (String args[]){
        
        DoubleLL dll = new DoubleLL();
        dll.addFirst(3);
        dll.addFirst(2);
        dll.addFirst(1);
        dll.addLast(4);

        dll.print();
        System.out.println("size"+ size);

        dll.removeFirst();
        dll.print();
        System.out.println("size"+ size);

    }
}
